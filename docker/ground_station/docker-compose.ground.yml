version: '3.8'

services:
  # ROS2 Bridge - Provides WebSocket/JSON interface to ROS2 network
  rosbridge:
    image: ros:humble
    container_name: rosbridge_server
    ports:
      - "9090:9090"  # WebSocket port for web frontend
    network_mode: host  # Required for ROS2 DDS discovery
    environment:
      - ROS_DOMAIN_ID=0
      - ROS_DISCOVERY_SERVER=100.101.149.9:11811
      - FASTRTPS_DEFAULT_PROFILES_FILE=/root/ws_droneOS/fastdds_super_client.xml
    volumes:
      - ../../install:/root/ws_droneOS/install:rw  # Mount built packages with write access
      - ../../src:/root/ws_droneOS/src:ro  # Mount source for message definitions
      - ../../fastdds_super_client.xml:/root/ws_droneOS/fastdds_super_client.xml:ro  # Super client config
    command: >
      bash -c "
        apt-get update && 
        apt-get install -y ros-humble-rosbridge-suite python3-pymongo &&
        source /opt/ros/humble/setup.bash &&
        source /root/ws_droneOS/install/setup.bash &&
        echo 'Starting rosbridge on port 9090 with DroneOS interfaces...' &&
        ros2 launch rosbridge_server rosbridge_websocket_launch.xml port:=9090
      "
    restart: unless-stopped

  # Telemetry Publisher - Publishes drone state for web frontend consumption
  telemetry_publisher:
    image: ros:humble
    container_name: telemetry_publisher
    network_mode: host  # Required for ROS2 DDS discovery
    environment:
      - ROS_DOMAIN_ID=0
      - ROS_DISCOVERY_SERVER=100.101.149.9:11811
      - FASTRTPS_DEFAULT_PROFILES_FILE=/root/ws_droneOS/fastdds_super_client.xml
    volumes:
      - ../../install:/root/ws_droneOS/install:rw  # Mount built packages with write access
      - ../../src:/root/ws_droneOS/src:ro  # Mount source for message definitions
      - ../../fastdds_super_client.xml:/root/ws_droneOS/fastdds_super_client.xml:ro  # Super client config
    command: >
      bash -c "
        source /opt/ros/humble/setup.bash &&
        source /root/ws_droneOS/install/setup.bash &&
        echo 'Starting telemetry publisher for drone state...' &&
        ros2 run drone_core telemetry_publisher \
          --ros-args \
          -p drone_namespaces:=['fmu'] \
          -p publish_rate_hz:=10 \
          -p enable_rosbridge_topics:=true \
          -p enable_get_state_services:=true
      "
    depends_on:
      - rosbridge
    restart: unless-stopped