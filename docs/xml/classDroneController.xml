<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classDroneController" kind="class" language="C++" prot="public">
    <compoundname>DroneController</compoundname>
    <includes refid="drone__controller_8hpp" local="no">drone_controller.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classDroneController_1af288d7ec51c90b73f55e301b25d83133" prot="private" static="no" mutable="no">
        <type>rclcpp::Node *</type>
        <definition>rclcpp::Node* DroneController::node_</definition>
        <argsstring></argsstring>
        <name>node_</name>
        <briefdescription>
<para>Pointer to ROS2 node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/drone_controller.hpp" line="79" column="18" bodyfile="src/drone_core/include/drone_core/drone_controller.hpp" bodystart="79" bodyend="-1"/>
        <referencedby refid="classDroneController_1a2bb6bb18bcd5e4c7377bf2c7221bb62f" compoundref="drone__controller_8cpp" startline="42" endline="52">arm</referencedby>
        <referencedby refid="classDroneController_1ae52bb1d50cb5414d78af49962b8ea8b4" compoundref="drone__controller_8cpp" startline="60" endline="70">disarm</referencedby>
        <referencedby refid="classDroneController_1aa67092201d1fb31334379d7ef5a66235" compoundref="drone__controller_8cpp" startline="21" endline="34">DroneController</referencedby>
        <referencedby refid="classDroneController_1a2da898f4a3cf5b82eafe82e33576791c" compoundref="drone__controller_8cpp" startline="108" endline="118">land</referencedby>
        <referencedby refid="classDroneController_1a4fb59b233337b1e3a16acce4343365d2" compoundref="drone__controller_8cpp" startline="126" endline="136">set_loiter_mode</referencedby>
        <referencedby refid="classDroneController_1a95ea01a8c146f1402af327fd97c993c5" compoundref="drone__controller_8cpp" startline="144" endline="154">set_position_mode</referencedby>
        <referencedby refid="classDroneController_1af5698222150a6bf5de479016f10acc63" compoundref="drone__controller_8cpp" startline="77" endline="81">takeoff</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string DroneController::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <briefdescription>
<para>Name of the drone. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/drone_controller.hpp" line="80" column="17" bodyfile="src/drone_core/include/drone_core/drone_controller.hpp" bodystart="80" bodyend="-1"/>
        <referencedby refid="classDroneController_1a2bb6bb18bcd5e4c7377bf2c7221bb62f" compoundref="drone__controller_8cpp" startline="42" endline="52">arm</referencedby>
        <referencedby refid="classDroneController_1ae52bb1d50cb5414d78af49962b8ea8b4" compoundref="drone__controller_8cpp" startline="60" endline="70">disarm</referencedby>
        <referencedby refid="classDroneController_1aa67092201d1fb31334379d7ef5a66235" compoundref="drone__controller_8cpp" startline="21" endline="34">DroneController</referencedby>
        <referencedby refid="classDroneController_1a2da898f4a3cf5b82eafe82e33576791c" compoundref="drone__controller_8cpp" startline="108" endline="118">land</referencedby>
        <referencedby refid="classDroneController_1a4fb59b233337b1e3a16acce4343365d2" compoundref="drone__controller_8cpp" startline="126" endline="136">set_loiter_mode</referencedby>
        <referencedby refid="classDroneController_1a95ea01a8c146f1402af327fd97c993c5" compoundref="drone__controller_8cpp" startline="144" endline="154">set_position_mode</referencedby>
        <referencedby refid="classDroneController_1af5698222150a6bf5de479016f10acc63" compoundref="drone__controller_8cpp" startline="77" endline="81">takeoff</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classDroneController_1a0edfab2681011e10cda6f8cb28eaee1a" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string DroneController::ns_</definition>
        <argsstring></argsstring>
        <name>ns_</name>
        <briefdescription>
<para>PX4 namespace. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/drone_controller.hpp" line="81" column="17" bodyfile="src/drone_core/include/drone_core/drone_controller.hpp" bodystart="81" bodyend="-1"/>
        <referencedby refid="classDroneController_1aa67092201d1fb31334379d7ef5a66235" compoundref="drone__controller_8cpp" startline="21" endline="34">DroneController</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classDroneController_1a4f0634d2e3ab89165b015c12e882dbad" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DroneController::target_x_</definition>
        <argsstring></argsstring>
        <name>target_x_</name>
        <initializer>= 0.0f</initializer>
        <briefdescription>
<para>Target x position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/drone_controller.hpp" line="82" column="11" bodyfile="src/drone_core/include/drone_core/drone_controller.hpp" bodystart="82" bodyend="-1"/>
        <referencedby refid="classDroneController_1aa67092201d1fb31334379d7ef5a66235" compoundref="drone__controller_8cpp" startline="21" endline="34">DroneController</referencedby>
        <referencedby refid="classDroneController_1a4b6f5aa78d968a1c680da4b64a3dafcb" compoundref="drone__controller_8cpp" startline="94" endline="100">set_position</referencedby>
        <referencedby refid="classDroneController_1af5698222150a6bf5de479016f10acc63" compoundref="drone__controller_8cpp" startline="77" endline="81">takeoff</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classDroneController_1a603c64f680b92a15a043cc4fabe720f3" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DroneController::target_y_</definition>
        <argsstring></argsstring>
        <name>target_y_</name>
        <initializer>= 0.0f</initializer>
        <briefdescription>
<para>Target y position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/drone_controller.hpp" line="83" column="11" bodyfile="src/drone_core/include/drone_core/drone_controller.hpp" bodystart="83" bodyend="-1"/>
        <referencedby refid="classDroneController_1aa67092201d1fb31334379d7ef5a66235" compoundref="drone__controller_8cpp" startline="21" endline="34">DroneController</referencedby>
        <referencedby refid="classDroneController_1a4b6f5aa78d968a1c680da4b64a3dafcb" compoundref="drone__controller_8cpp" startline="94" endline="100">set_position</referencedby>
        <referencedby refid="classDroneController_1af5698222150a6bf5de479016f10acc63" compoundref="drone__controller_8cpp" startline="77" endline="81">takeoff</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classDroneController_1a64733531bff81796dfdbeda4371cb061" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DroneController::target_z_</definition>
        <argsstring></argsstring>
        <name>target_z_</name>
        <initializer>= 0.0f</initializer>
        <briefdescription>
<para>Target z position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/drone_controller.hpp" line="84" column="11" bodyfile="src/drone_core/include/drone_core/drone_controller.hpp" bodystart="84" bodyend="-1"/>
        <referencedby refid="classDroneController_1aa67092201d1fb31334379d7ef5a66235" compoundref="drone__controller_8cpp" startline="21" endline="34">DroneController</referencedby>
        <referencedby refid="classDroneController_1a4b6f5aa78d968a1c680da4b64a3dafcb" compoundref="drone__controller_8cpp" startline="94" endline="100">set_position</referencedby>
        <referencedby refid="classDroneController_1af5698222150a6bf5de479016f10acc63" compoundref="drone__controller_8cpp" startline="77" endline="81">takeoff</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classDroneController_1a659b19b528332abb67e0fac27a318fe7" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DroneController::target_yaw_</definition>
        <argsstring></argsstring>
        <name>target_yaw_</name>
        <initializer>= 0.0f</initializer>
        <briefdescription>
<para>Target yaw angle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/drone_controller.hpp" line="85" column="11" bodyfile="src/drone_core/include/drone_core/drone_controller.hpp" bodystart="85" bodyend="-1"/>
        <referencedby refid="classDroneController_1aa67092201d1fb31334379d7ef5a66235" compoundref="drone__controller_8cpp" startline="21" endline="34">DroneController</referencedby>
        <referencedby refid="classDroneController_1a4b6f5aa78d968a1c680da4b64a3dafcb" compoundref="drone__controller_8cpp" startline="94" endline="100">set_position</referencedby>
        <referencedby refid="classDroneController_1af5698222150a6bf5de479016f10acc63" compoundref="drone__controller_8cpp" startline="77" endline="81">takeoff</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classDroneController_1a07d746e6d02ae63c3117b3721fe070fa" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classDroneAgent" kindref="compound">DroneAgent</ref> &gt;</type>
        <definition>std::unique_ptr&lt;DroneAgent&gt; DroneController::drone_agent_</definition>
        <argsstring></argsstring>
        <name>drone_agent_</name>
        <briefdescription>
<para>Command relay for PX4 communication. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/drone_controller.hpp" line="87" column="21" bodyfile="src/drone_core/include/drone_core/drone_controller.hpp" bodystart="87" bodyend="-1"/>
        <referencedby refid="classDroneController_1a2bb6bb18bcd5e4c7377bf2c7221bb62f" compoundref="drone__controller_8cpp" startline="42" endline="52">arm</referencedby>
        <referencedby refid="classDroneController_1ae52bb1d50cb5414d78af49962b8ea8b4" compoundref="drone__controller_8cpp" startline="60" endline="70">disarm</referencedby>
        <referencedby refid="classDroneController_1aa67092201d1fb31334379d7ef5a66235" compoundref="drone__controller_8cpp" startline="21" endline="34">DroneController</referencedby>
        <referencedby refid="classDroneController_1a2da898f4a3cf5b82eafe82e33576791c" compoundref="drone__controller_8cpp" startline="108" endline="118">land</referencedby>
        <referencedby refid="classDroneController_1a4fb59b233337b1e3a16acce4343365d2" compoundref="drone__controller_8cpp" startline="126" endline="136">set_loiter_mode</referencedby>
        <referencedby refid="classDroneController_1a95ea01a8c146f1402af327fd97c993c5" compoundref="drone__controller_8cpp" startline="144" endline="154">set_position_mode</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classDroneController_1a7d11e531cf01b680050f496425118481" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classOffboardControl" kindref="compound">OffboardControl</ref> &gt;</type>
        <definition>std::unique_ptr&lt;OffboardControl&gt; DroneController::offboard_control_</definition>
        <argsstring></argsstring>
        <name>offboard_control_</name>
        <briefdescription>
<para>Offboard control manager. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/drone_controller.hpp" line="88" column="21" bodyfile="src/drone_core/include/drone_core/drone_controller.hpp" bodystart="88" bodyend="-1"/>
        <referencedby refid="classDroneController_1aa67092201d1fb31334379d7ef5a66235" compoundref="drone__controller_8cpp" startline="21" endline="34">DroneController</referencedby>
        <referencedby refid="classDroneController_1afde4f7f2ca28f12f12a420ba3756ce34" compoundref="drone__controller_8cpp" startline="160" endline="162">is_ready</referencedby>
        <referencedby refid="classDroneController_1a4b6f5aa78d968a1c680da4b64a3dafcb" compoundref="drone__controller_8cpp" startline="94" endline="100">set_position</referencedby>
        <referencedby refid="classDroneController_1af5698222150a6bf5de479016f10acc63" compoundref="drone__controller_8cpp" startline="77" endline="81">takeoff</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classDroneController_1aa67092201d1fb31334379d7ef5a66235" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DroneController::DroneController</definition>
        <argsstring>(rclcpp::Node *node, const std::string &amp;name, const std::string &amp;px4_namespace)</argsstring>
        <name>DroneController</name>
        <param>
          <type>rclcpp::Node *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>px4_namespace</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classDroneController" kindref="compound">DroneController</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructs a new <ref refid="classDroneController" kindref="compound">DroneController</ref> instance.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the ROS2 node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the drone </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>px4_namespace</parametername>
</parameternamelist>
<parameterdescription>
<para>PX4 namespace for communication</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Initializes the drone controller with ROS2 publishers and sets up initial state. The drone starts in a connected state, ready for commands.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the ROS2 node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the drone </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>px4_namespace</parametername>
</parameternamelist>
<parameterdescription>
<para>PX4 namespace for communication </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/drone_controller.hpp" line="31" column="5" bodyfile="src/drone_core/src/drone_core/drone_controller.cpp" bodystart="21" bodyend="34"/>
        <references refid="classDroneController_1a07d746e6d02ae63c3117b3721fe070fa" compoundref="drone__controller_8hpp" startline="87">drone_agent_</references>
        <references refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" compoundref="drone__controller_8hpp" startline="80">name_</references>
        <references refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" compoundref="drone__controller_8hpp" startline="79">node_</references>
        <references refid="classDroneController_1a0edfab2681011e10cda6f8cb28eaee1a" compoundref="drone__controller_8hpp" startline="81">ns_</references>
        <references refid="classDroneController_1a7d11e531cf01b680050f496425118481" compoundref="drone__controller_8hpp" startline="88">offboard_control_</references>
        <references refid="classDroneController_1a4f0634d2e3ab89165b015c12e882dbad" compoundref="drone__controller_8hpp" startline="82">target_x_</references>
        <references refid="classDroneController_1a603c64f680b92a15a043cc4fabe720f3" compoundref="drone__controller_8hpp" startline="83">target_y_</references>
        <references refid="classDroneController_1a659b19b528332abb67e0fac27a318fe7" compoundref="drone__controller_8hpp" startline="85">target_yaw_</references>
        <references refid="classDroneController_1a64733531bff81796dfdbeda4371cb061" compoundref="drone__controller_8hpp" startline="84">target_z_</references>
      </memberdef>
      <memberdef kind="function" id="classDroneController_1a2bb6bb18bcd5e4c7377bf2c7221bb62f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DroneController::arm</definition>
        <argsstring>()</argsstring>
        <name>arm</name>
        <briefdescription>
<para>Arm the drone. </para>
        </briefdescription>
        <detaileddescription>
<para>Sends an arm command to the drone.</para>
<para>Uses the command relay to send a vehicle command to arm the drone. The result is handled asynchronously through a callback. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/drone_controller.hpp" line="36" column="10" bodyfile="src/drone_core/src/drone_core/drone_controller.cpp" bodystart="42" bodyend="52"/>
        <references refid="classDroneController_1a07d746e6d02ae63c3117b3721fe070fa" compoundref="drone__controller_8hpp" startline="87">drone_agent_</references>
        <references refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" compoundref="drone__controller_8hpp" startline="80">name_</references>
        <references refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" compoundref="drone__controller_8hpp" startline="79">node_</references>
      </memberdef>
      <memberdef kind="function" id="classDroneController_1ae52bb1d50cb5414d78af49962b8ea8b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DroneController::disarm</definition>
        <argsstring>()</argsstring>
        <name>disarm</name>
        <briefdescription>
<para>Disarm the drone. </para>
        </briefdescription>
        <detaileddescription>
<para>Sends a disarm command to the drone.</para>
<para>Uses the command relay to send a vehicle command to disarm the drone. The result is handled asynchronously through a callback. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/drone_controller.hpp" line="41" column="10" bodyfile="src/drone_core/src/drone_core/drone_controller.cpp" bodystart="60" bodyend="70"/>
        <references refid="classDroneController_1a07d746e6d02ae63c3117b3721fe070fa" compoundref="drone__controller_8hpp" startline="87">drone_agent_</references>
        <references refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" compoundref="drone__controller_8hpp" startline="80">name_</references>
        <references refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" compoundref="drone__controller_8hpp" startline="79">node_</references>
      </memberdef>
      <memberdef kind="function" id="classDroneController_1af5698222150a6bf5de479016f10acc63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DroneController::takeoff</definition>
        <argsstring>()</argsstring>
        <name>takeoff</name>
        <briefdescription>
<para>Command the drone to takeoff. </para>
        </briefdescription>
        <detaileddescription>
<para>Initiates the takeoff sequence.</para>
<para>Starts the offboard control mode and sets the initial position. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/drone_controller.hpp" line="46" column="10" bodyfile="src/drone_core/src/drone_core/drone_controller.cpp" bodystart="77" bodyend="81"/>
        <references refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" compoundref="drone__controller_8hpp" startline="80">name_</references>
        <references refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" compoundref="drone__controller_8hpp" startline="79">node_</references>
        <references refid="classDroneController_1a7d11e531cf01b680050f496425118481" compoundref="drone__controller_8hpp" startline="88">offboard_control_</references>
        <references refid="classDroneController_1a4b6f5aa78d968a1c680da4b64a3dafcb" compoundref="drone__controller_8cpp" startline="94" endline="100">set_position</references>
        <references refid="classDroneController_1a4f0634d2e3ab89165b015c12e882dbad" compoundref="drone__controller_8hpp" startline="82">target_x_</references>
        <references refid="classDroneController_1a603c64f680b92a15a043cc4fabe720f3" compoundref="drone__controller_8hpp" startline="83">target_y_</references>
        <references refid="classDroneController_1a659b19b528332abb67e0fac27a318fe7" compoundref="drone__controller_8hpp" startline="85">target_yaw_</references>
        <references refid="classDroneController_1a64733531bff81796dfdbeda4371cb061" compoundref="drone__controller_8hpp" startline="84">target_z_</references>
      </memberdef>
      <memberdef kind="function" id="classDroneController_1a4b6f5aa78d968a1c680da4b64a3dafcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DroneController::set_position</definition>
        <argsstring>(float x, float y, float z, float yaw)</argsstring>
        <name>set_position</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <param>
          <type>float</type>
          <declname>yaw</declname>
        </param>
        <briefdescription>
<para>Set target position and yaw. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets the target position and yaw for the drone.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Target x position in meters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Target y position in meters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>Target z position in meters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yaw</parametername>
</parameternamelist>
<parameterdescription>
<para>Target yaw angle in radians</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Updates the internal target position and yaw values. These values will be used in the next trajectory setpoint message.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Target x position in meters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Target y position in meters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>Target z position in meters (negative is up in NED frame) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yaw</parametername>
</parameternamelist>
<parameterdescription>
<para>Target yaw angle in radians </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/drone_controller.hpp" line="55" column="10" bodyfile="src/drone_core/src/drone_core/drone_controller.cpp" bodystart="94" bodyend="100"/>
        <references refid="classDroneController_1a7d11e531cf01b680050f496425118481" compoundref="drone__controller_8hpp" startline="88">offboard_control_</references>
        <references refid="classDroneController_1a4f0634d2e3ab89165b015c12e882dbad" compoundref="drone__controller_8hpp" startline="82">target_x_</references>
        <references refid="classDroneController_1a603c64f680b92a15a043cc4fabe720f3" compoundref="drone__controller_8hpp" startline="83">target_y_</references>
        <references refid="classDroneController_1a659b19b528332abb67e0fac27a318fe7" compoundref="drone__controller_8hpp" startline="85">target_yaw_</references>
        <references refid="classDroneController_1a64733531bff81796dfdbeda4371cb061" compoundref="drone__controller_8hpp" startline="84">target_z_</references>
        <referencedby refid="classDroneController_1af5698222150a6bf5de479016f10acc63" compoundref="drone__controller_8cpp" startline="77" endline="81">takeoff</referencedby>
      </memberdef>
      <memberdef kind="function" id="classDroneController_1a2da898f4a3cf5b82eafe82e33576791c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DroneController::land</definition>
        <argsstring>()</argsstring>
        <name>land</name>
        <briefdescription>
<para>Command the drone to land. </para>
        </briefdescription>
        <detaileddescription>
<para>Commands the drone to land.</para>
<para>Sends a command to initiate the landing sequence. The result is handled asynchronously through a callback. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/drone_controller.hpp" line="60" column="10" bodyfile="src/drone_core/src/drone_core/drone_controller.cpp" bodystart="108" bodyend="118"/>
        <references refid="classDroneController_1a07d746e6d02ae63c3117b3721fe070fa" compoundref="drone__controller_8hpp" startline="87">drone_agent_</references>
        <references refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" compoundref="drone__controller_8hpp" startline="80">name_</references>
        <references refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" compoundref="drone__controller_8hpp" startline="79">node_</references>
      </memberdef>
      <memberdef kind="function" id="classDroneController_1a4fb59b233337b1e3a16acce4343365d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DroneController::set_loiter_mode</definition>
        <argsstring>()</argsstring>
        <name>set_loiter_mode</name>
        <briefdescription>
<para>Set the drone to loiter mode. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets the drone to loiter mode.</para>
<para>Sends a command to switch the drone to loiter mode. The result is handled asynchronously through a callback. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/drone_controller.hpp" line="65" column="10" bodyfile="src/drone_core/src/drone_core/drone_controller.cpp" bodystart="126" bodyend="136"/>
        <references refid="classDroneController_1a07d746e6d02ae63c3117b3721fe070fa" compoundref="drone__controller_8hpp" startline="87">drone_agent_</references>
        <references refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" compoundref="drone__controller_8hpp" startline="80">name_</references>
        <references refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" compoundref="drone__controller_8hpp" startline="79">node_</references>
      </memberdef>
      <memberdef kind="function" id="classDroneController_1a95ea01a8c146f1402af327fd97c993c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DroneController::set_position_mode</definition>
        <argsstring>()</argsstring>
        <name>set_position_mode</name>
        <briefdescription>
<para>Set the drone to position control mode. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets the drone to position control mode.</para>
<para>Sends a command to switch the drone to position control mode. The result is handled asynchronously through a callback. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/drone_controller.hpp" line="70" column="10" bodyfile="src/drone_core/src/drone_core/drone_controller.cpp" bodystart="144" bodyend="154"/>
        <references refid="classDroneController_1a07d746e6d02ae63c3117b3721fe070fa" compoundref="drone__controller_8hpp" startline="87">drone_agent_</references>
        <references refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" compoundref="drone__controller_8hpp" startline="80">name_</references>
        <references refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" compoundref="drone__controller_8hpp" startline="79">node_</references>
      </memberdef>
      <memberdef kind="function" id="classDroneController_1afde4f7f2ca28f12f12a420ba3756ce34" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DroneController::is_ready</definition>
        <argsstring>() const</argsstring>
        <name>is_ready</name>
        <briefdescription>
<para>Check if the drone is in offboard mode and armed. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the drone is in offboard mode and armed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/drone_controller.hpp" line="76" column="10" bodyfile="src/drone_core/src/drone_core/drone_controller.cpp" bodystart="160" bodyend="162"/>
        <references refid="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2da6e0c631e86ef2402cfa1ca3608a5123e">OffboardControl::armed</references>
        <references refid="classDroneController_1a7d11e531cf01b680050f496425118481" compoundref="drone__controller_8hpp" startline="88">offboard_control_</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Manages the state and control of a single drone. </para>
    </briefdescription>
    <detaileddescription>
<para>This class handles the core functionality for controlling a drone, including:<itemizedlist>
<listitem><para>Offboard control</para>
</listitem><listitem><para>Arm/disarm operations</para>
</listitem><listitem><para>Position control</para>
</listitem><listitem><para>Takeoff and landing </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>std::unique_ptr&lt; OffboardControl &gt;</label>
      </node>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="1">
        <label>DroneController</label>
        <link refid="classDroneController"/>
        <childnode refid="2" relation="usage">
          <edgelabel>offboard_control_</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>drone_agent_</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>name_</edgelabel>
          <edgelabel>ns_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::unique_ptr&lt; DroneAgent &gt;</label>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/drone_core/include/drone_core/drone_controller.hpp" line="23" column="1" bodyfile="src/drone_core/include/drone_core/drone_controller.hpp" bodystart="23" bodyend="89"/>
    <listofallmembers>
      <member refid="classDroneController_1a2bb6bb18bcd5e4c7377bf2c7221bb62f" prot="public" virt="non-virtual"><scope>DroneController</scope><name>arm</name></member>
      <member refid="classDroneController_1ae52bb1d50cb5414d78af49962b8ea8b4" prot="public" virt="non-virtual"><scope>DroneController</scope><name>disarm</name></member>
      <member refid="classDroneController_1a07d746e6d02ae63c3117b3721fe070fa" prot="private" virt="non-virtual"><scope>DroneController</scope><name>drone_agent_</name></member>
      <member refid="classDroneController_1aa67092201d1fb31334379d7ef5a66235" prot="public" virt="non-virtual"><scope>DroneController</scope><name>DroneController</name></member>
      <member refid="classDroneController_1afde4f7f2ca28f12f12a420ba3756ce34" prot="public" virt="non-virtual"><scope>DroneController</scope><name>is_ready</name></member>
      <member refid="classDroneController_1a2da898f4a3cf5b82eafe82e33576791c" prot="public" virt="non-virtual"><scope>DroneController</scope><name>land</name></member>
      <member refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" prot="private" virt="non-virtual"><scope>DroneController</scope><name>name_</name></member>
      <member refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" prot="private" virt="non-virtual"><scope>DroneController</scope><name>node_</name></member>
      <member refid="classDroneController_1a0edfab2681011e10cda6f8cb28eaee1a" prot="private" virt="non-virtual"><scope>DroneController</scope><name>ns_</name></member>
      <member refid="classDroneController_1a7d11e531cf01b680050f496425118481" prot="private" virt="non-virtual"><scope>DroneController</scope><name>offboard_control_</name></member>
      <member refid="classDroneController_1a4fb59b233337b1e3a16acce4343365d2" prot="public" virt="non-virtual"><scope>DroneController</scope><name>set_loiter_mode</name></member>
      <member refid="classDroneController_1a4b6f5aa78d968a1c680da4b64a3dafcb" prot="public" virt="non-virtual"><scope>DroneController</scope><name>set_position</name></member>
      <member refid="classDroneController_1a95ea01a8c146f1402af327fd97c993c5" prot="public" virt="non-virtual"><scope>DroneController</scope><name>set_position_mode</name></member>
      <member refid="classDroneController_1af5698222150a6bf5de479016f10acc63" prot="public" virt="non-virtual"><scope>DroneController</scope><name>takeoff</name></member>
      <member refid="classDroneController_1a4f0634d2e3ab89165b015c12e882dbad" prot="private" virt="non-virtual"><scope>DroneController</scope><name>target_x_</name></member>
      <member refid="classDroneController_1a603c64f680b92a15a043cc4fabe720f3" prot="private" virt="non-virtual"><scope>DroneController</scope><name>target_y_</name></member>
      <member refid="classDroneController_1a659b19b528332abb67e0fac27a318fe7" prot="private" virt="non-virtual"><scope>DroneController</scope><name>target_yaw_</name></member>
      <member refid="classDroneController_1a64733531bff81796dfdbeda4371cb061" prot="private" virt="non-virtual"><scope>DroneController</scope><name>target_z_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
