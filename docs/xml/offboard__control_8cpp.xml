<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="offboard__control_8cpp" kind="file" language="C++">
    <compoundname>offboard_control.cpp</compoundname>
    <includes refid="offboard__control_8hpp" local="yes">drone_core/offboard_control.hpp</includes>
    <incdepgraph>
      <node id="6">
        <label>px4_msgs/srv/vehicle_command.hpp</label>
      </node>
      <node id="1">
        <label>src/drone_core/src/drone_core/offboard_control.cpp</label>
        <link refid="offboard__control_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>rclcpp/rclcpp.hpp</label>
      </node>
      <node id="5">
        <label>px4_msgs/msg/trajectory_setpoint.hpp</label>
      </node>
      <node id="4">
        <label>px4_msgs/msg/offboard_control_mode.hpp</label>
      </node>
      <node id="2">
        <label>drone_core/offboard_control.hpp</label>
        <link refid="offboard__control_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para>Implementation of the <ref refid="classOffboardControl" kindref="compound">OffboardControl</ref> class for PX4 flight controller integration. </para>
    </briefdescription>
    <detaileddescription>
<para>This file implements the <ref refid="classOffboardControl" kindref="compound">OffboardControl</ref> class which provides an interface for controlling a PX4-based drone in offboard mode. It handles the communication with PX4 through ROS 2 topics and services, managing the transition to offboard mode, arming, and trajectory control. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="offboard__control_8hpp" kindref="compound">drone_core/offboard_control.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::chrono_literals;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classOffboardControl_1a19bcc486a8eb3cde63a5970e795663ef" refkind="member"><highlight class="normal"><ref refid="classOffboardControl_1a19bcc486a8eb3cde63a5970e795663ef" kindref="member">OffboardControl::OffboardControl</ref>(rclcpp::Node*<sp/>node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>px4_namespace)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>node_(node),<sp/>ns_(px4_namespace)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOffboardControl_1a384d648577c897e6d860a84212dea06e" kindref="member">offboard_control_mode_pub_</ref><sp/>=<sp/><ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;create_publisher&lt;px4_msgs::msg::OffboardControlMode&gt;(<ref refid="classOffboardControl_1a1f13749a64647c48ca5b75af7a7244f0" kindref="member">ns_</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;in/offboard_control_mode&quot;</highlight><highlight class="normal">,<sp/>10);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOffboardControl_1ab157d158b22145e10da19ac12045fef0" kindref="member">trajectory_setpoint_pub_</ref><sp/>=<sp/><ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;create_publisher&lt;px4_msgs::msg::TrajectorySetpoint&gt;(<ref refid="classOffboardControl_1a1f13749a64647c48ca5b75af7a7244f0" kindref="member">ns_</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;in/trajectory_setpoint&quot;</highlight><highlight class="normal">,<sp/>10);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOffboardControl_1a44b3c5ef77d57381de1f5658750ba284" kindref="member">vehicle_command_client_</ref><sp/>=<sp/><ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;create_client&lt;px4_msgs::srv::VehicleCommand&gt;(<ref refid="classOffboardControl_1a1f13749a64647c48ca5b75af7a7244f0" kindref="member">ns_</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;vehicle_command&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>vehicle<sp/>command<sp/>service</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>RCLCPP_INFO(<ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Waiting<sp/>for<sp/>vehicle<sp/>command<sp/>service...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="classOffboardControl_1a44b3c5ef77d57381de1f5658750ba284" kindref="member">vehicle_command_client_</ref>-&gt;wait_for_service(1s))<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rclcpp::ok())<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_ERROR(<ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Interrupted<sp/>while<sp/>waiting<sp/>for<sp/>service&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(<ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Service<sp/>not<sp/>available,<sp/>waiting<sp/>again...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>RCLCPP_INFO(<ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Vehicle<sp/>command<sp/>service<sp/>ready&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classOffboardControl_1ae4b80998df39efe0cab2ef6b09a6e200" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classOffboardControl_1ae4b80998df39efe0cab2ef6b09a6e200" kindref="member">OffboardControl::start</ref>()<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classOffboardControl_1a1dab76f058afd3c8ede86123dfd77a3c" kindref="member">timer_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>timer<sp/>to<sp/>500ms<sp/>(2<sp/>Hz)<sp/>as<sp/>required<sp/>by<sp/>PX4<sp/>for<sp/>offboard<sp/>control<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOffboardControl_1a1dab76f058afd3c8ede86123dfd77a3c" kindref="member">timer_</ref><sp/>=<sp/><ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;create_wall_timer(</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>500ms,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{<sp/><ref refid="classOffboardControl_1af8e70b949b4f8b24bc65499d283a3258" kindref="member">timer_callback</ref>();<sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(<ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Started<sp/>offboard<sp/>control<sp/>mode<sp/>publisher<sp/>at<sp/>2<sp/>Hz&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>the<sp/>offboard<sp/>control<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOffboardControl_1aff0f3a025ec55301c2f94ea30677ed77" kindref="member">state_</ref><sp/>=<sp/><ref refid="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2dae37f0136aa3ffaf149b351f6a4c948e9" kindref="member">State::init</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classOffboardControl_1ada6bd384622490ee569bcc40de89c217" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classOffboardControl_1ada6bd384622490ee569bcc40de89c217" kindref="member">OffboardControl::stop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classOffboardControl_1a1dab76f058afd3c8ede86123dfd77a3c" kindref="member">timer_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOffboardControl_1a1dab76f058afd3c8ede86123dfd77a3c" kindref="member">timer_</ref>-&gt;cancel();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOffboardControl_1a1dab76f058afd3c8ede86123dfd77a3c" kindref="member">timer_</ref>.reset();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(<ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Stopped<sp/>offboard<sp/>control<sp/>mode<sp/>publisher&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classOffboardControl_1af8e70b949b4f8b24bc65499d283a3258" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classOffboardControl_1af8e70b949b4f8b24bc65499d283a3258" kindref="member">OffboardControl::timer_callback</ref>()<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Always<sp/>publish<sp/>offboard<sp/>control<sp/>mode<sp/>at<sp/>2<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>px4_msgs::msg::OffboardControlMode<sp/>msg{};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.position<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.velocity<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.acceleration<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.attitude<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.body_rate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.timestamp<sp/>=<sp/><ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;get_clock()-&gt;now().nanoseconds()<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOffboardControl_1a384d648577c897e6d860a84212dea06e" kindref="member">offboard_control_mode_pub_</ref>-&gt;publish(msg);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>state<sp/>machine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classOffboardControl_1aff0f3a025ec55301c2f94ea30677ed77" kindref="member">state_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2dae37f0136aa3ffaf149b351f6a4c948e9" kindref="member">State::init</ref>:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Request<sp/>offboard<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOffboardControl_1ab95f56d0d8f9d1c73b139ffbfc8ba6bf" kindref="member">send_vehicle_command</ref>(px4_msgs::msg::VehicleCommand::VEHICLE_CMD_DO_SET_MODE,<sp/>1.0f,<sp/>6.0f);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOffboardControl_1aff0f3a025ec55301c2f94ea30677ed77" kindref="member">state_</ref><sp/>=<sp/><ref refid="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2da9995f5beaef7b06d427b018b03a5ee39" kindref="member">State::offboard_requested</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2da9995f5beaef7b06d427b018b03a5ee39" kindref="member">State::offboard_requested</ref>:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classOffboardControl_1a0a250d3a9fbe795d6a15cdda33492988" kindref="member">service_done_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classOffboardControl_1ac8de4f5b3343b6830260693c1f451b7d" kindref="member">service_result_</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(<ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Entered<sp/>offboard<sp/>mode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOffboardControl_1aff0f3a025ec55301c2f94ea30677ed77" kindref="member">state_</ref><sp/>=<sp/><ref refid="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2da1659dee3f1149c4682f3286422fb57ba" kindref="member">State::wait_for_stable_offboard_mode</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_ERROR(<ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>enter<sp/>offboard<sp/>mode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2da1659dee3f1149c4682f3286422fb57ba" kindref="member">State::wait_for_stable_offboard_mode</ref>:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++<ref refid="classOffboardControl_1a91c4e5bcfe03a2e4e79b99664efba5d9" kindref="member">offboard_setpoint_counter_</ref><sp/>&gt;<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>arm<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOffboardControl_1ab95f56d0d8f9d1c73b139ffbfc8ba6bf" kindref="member">send_vehicle_command</ref>(px4_msgs::msg::VehicleCommand::VEHICLE_CMD_COMPONENT_ARM_DISARM,<sp/>1.0f);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOffboardControl_1aff0f3a025ec55301c2f94ea30677ed77" kindref="member">state_</ref><sp/>=<sp/><ref refid="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2da199c9e9f930e5e397734384245ee61ec" kindref="member">State::arm_requested</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2da199c9e9f930e5e397734384245ee61ec" kindref="member">State::arm_requested</ref>:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classOffboardControl_1a0a250d3a9fbe795d6a15cdda33492988" kindref="member">service_done_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classOffboardControl_1ac8de4f5b3343b6830260693c1f451b7d" kindref="member">service_result_</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(<ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Vehicle<sp/>is<sp/>armed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOffboardControl_1aff0f3a025ec55301c2f94ea30677ed77" kindref="member">state_</ref><sp/>=<sp/><ref refid="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2da6e0c631e86ef2402cfa1ca3608a5123e" kindref="member">State::armed</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_ERROR(<ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>arm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2da6e0c631e86ef2402cfa1ca3608a5123e" kindref="member">State::armed</ref>:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vehicle<sp/>is<sp/>armed<sp/>and<sp/>in<sp/>offboard<sp/>mode,<sp/>ready<sp/>for<sp/>commands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="classOffboardControl_1ab95f56d0d8f9d1c73b139ffbfc8ba6bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classOffboardControl_1ab95f56d0d8f9d1c73b139ffbfc8ba6bf" kindref="member">OffboardControl::send_vehicle_command</ref>(uint16_t<sp/>command,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>param1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>param2)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>request<sp/>=<sp/>std::make_shared&lt;px4_msgs::srv::VehicleCommand::Request&gt;();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>px4_msgs::msg::VehicleCommand<sp/>msg{};</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.param1<sp/>=<sp/>param1;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.param2<sp/>=<sp/>param2;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.command<sp/>=<sp/>command;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.target_system<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.target_component<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.source_system<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.source_component<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.from_external<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.timestamp<sp/>=<sp/><ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;get_clock()-&gt;now().nanoseconds()<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>request-&gt;request<sp/>=<sp/>msg;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOffboardControl_1a0a250d3a9fbe795d6a15cdda33492988" kindref="member">service_done_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOffboardControl_1a44b3c5ef77d57381de1f5658750ba284" kindref="member">vehicle_command_client_</ref>-&gt;async_send_request(request,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](rclcpp::Client&lt;px4_msgs::srv::VehicleCommand&gt;::SharedFuture<sp/>future)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOffboardControl_1a5e9633b6059c739f9993bf710cab83c2" kindref="member">command_response_callback</ref>(future);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="classOffboardControl_1a5e9633b6059c739f9993bf710cab83c2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classOffboardControl_1a5e9633b6059c739f9993bf710cab83c2" kindref="member">OffboardControl::command_response_callback</ref>(</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>rclcpp::Client&lt;px4_msgs::srv::VehicleCommand&gt;::SharedFuture<sp/>future)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>future.wait_for(1s);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>std::future_status::ready)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reply<sp/>=<sp/>future.get()-&gt;reply;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOffboardControl_1ac8de4f5b3343b6830260693c1f451b7d" kindref="member">service_result_</ref><sp/>=<sp/>reply.result;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classOffboardControl_1ac8de4f5b3343b6830260693c1f451b7d" kindref="member">service_result_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>reply.VEHICLE_CMD_RESULT_ACCEPTED:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(<ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>accepted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>reply.VEHICLE_CMD_RESULT_TEMPORARILY_REJECTED:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_WARN(<ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>temporarily<sp/>rejected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>reply.VEHICLE_CMD_RESULT_DENIED:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_WARN(<ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>denied&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>reply.VEHICLE_CMD_RESULT_UNSUPPORTED:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_WARN(<ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>unsupported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>reply.VEHICLE_CMD_RESULT_FAILED:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_WARN(<ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>reply.VEHICLE_CMD_RESULT_IN_PROGRESS:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_WARN(<ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>in<sp/>progress&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>reply.VEHICLE_CMD_RESULT_CANCELLED:</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_WARN(<ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>cancelled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_WARN(<ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>reply<sp/>unknown&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOffboardControl_1a0a250d3a9fbe795d6a15cdda33492988" kindref="member">service_done_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(<ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Service<sp/>In-Progress...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="classOffboardControl_1a8e7d2f533f95d905cbacab1beec0cca5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classOffboardControl_1a8e7d2f533f95d905cbacab1beec0cca5" kindref="member">OffboardControl::publish_trajectory_setpoint</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>yaw)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>px4_msgs::msg::TrajectorySetpoint<sp/>msg{};</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.position<sp/>=<sp/>{x,<sp/>y,<sp/>z};</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.yaw<sp/>=<sp/>yaw;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.timestamp<sp/>=<sp/><ref refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" kindref="member">node_</ref>-&gt;get_clock()-&gt;now().nanoseconds()<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOffboardControl_1ab157d158b22145e10da19ac12045fef0" kindref="member">trajectory_setpoint_pub_</ref>-&gt;publish(msg);</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}<sp/></highlight></codeline>
    </programlisting>
    <location file="src/drone_core/src/drone_core/offboard_control.cpp"/>
  </compounddef>
</doxygen>
