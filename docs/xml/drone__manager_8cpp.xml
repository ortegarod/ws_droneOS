<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="drone__manager_8cpp" kind="file" language="C++">
    <compoundname>drone_manager.cpp</compoundname>
    <includes refid="drone__manager_8hpp" local="yes">drone_core/drone_manager.hpp</includes>
    <incdepgraph>
      <node id="10">
        <label>px4_msgs/srv/vehicle_command.hpp</label>
      </node>
      <node id="8">
        <label>drone_core/drone_controller.hpp</label>
        <link refid="drone__controller_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="2">
        <label>drone_core/drone_manager.hpp</label>
        <link refid="drone__manager_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>rclcpp/rclcpp.hpp</label>
      </node>
      <node id="14">
        <label>px4_msgs/msg/trajectory_setpoint.hpp</label>
      </node>
      <node id="13">
        <label>px4_msgs/msg/offboard_control_mode.hpp</label>
      </node>
      <node id="12">
        <label>drone_core/offboard_control.hpp</label>
        <link refid="offboard__control_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/drone_core/src/drone_core/drone_manager.cpp</label>
        <link refid="drone__manager_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>unordered_map</label>
      </node>
      <node id="9">
        <label>drone_core/drone_agent.hpp</label>
        <link refid="drone__agent_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>thread</label>
      </node>
      <node id="11">
        <label>px4_msgs/msg/vehicle_command.hpp</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para>Implementation of the <ref refid="classDroneManager" kindref="compound">DroneManager</ref> class for managing multiple drones. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drone__manager_8hpp" kindref="compound">drone_core/drone_manager.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classDroneManager_1aec864cf3cda1b9b61351338ffdbf5a6d" refkind="member"><highlight class="normal"><ref refid="classDroneManager_1aec864cf3cda1b9b61351338ffdbf5a6d" kindref="member">DroneManager::DroneManager</ref>()<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rclcpp::ok())<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rclcpp::init(0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDroneManager_1abcebc371c40b085a8e8d57e5f5296779" kindref="member">node_</ref><sp/>=<sp/>std::make_shared&lt;rclcpp::Node&gt;(</highlight><highlight class="stringliteral">&quot;drone_os&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classDroneManager_1a57c93ceb39b0f4b44f059e5666d9d079" refkind="member"><highlight class="normal"><ref refid="classDroneManager_1a57c93ceb39b0f4b44f059e5666d9d079" kindref="member">DroneManager::~DroneManager</ref>()<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDroneManager_1a6eeadbaa8e3869abaf87bfae5e6d6ea3" kindref="member">stop</ref>();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rclcpp::ok())<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rclcpp::shutdown();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classDroneManager_1aa77cfd925d788e108f49b195bc40faa1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDroneManager_1aa77cfd925d788e108f49b195bc40faa1" kindref="member">DroneManager::add_drone</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>drone_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>px4_namespace)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDroneManager_1a34eef5f6034244ff1b506b543a139bee" kindref="member">drones_</ref>.count(drone_name))<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_WARN(<ref refid="classDroneManager_1abcebc371c40b085a8e8d57e5f5296779" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Drone<sp/>&apos;%s&apos;<sp/>already<sp/>exists.&quot;</highlight><highlight class="normal">,<sp/>drone_name.c_str());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDroneManager_1a34eef5f6034244ff1b506b543a139bee" kindref="member">drones_</ref>[drone_name]<sp/>=<sp/>std::make_shared&lt;DroneController&gt;(<ref refid="classDroneManager_1abcebc371c40b085a8e8d57e5f5296779" kindref="member">node_</ref>.get(),<sp/>drone_name,<sp/>px4_namespace);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>RCLCPP_INFO(<ref refid="classDroneManager_1abcebc371c40b085a8e8d57e5f5296779" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Added<sp/>drone<sp/>&apos;%s&apos;<sp/>with<sp/>namespace<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>drone_name.c_str(),<sp/>px4_namespace.c_str());</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classDroneManager_1a3e47b15e8b85d8215257d354ff86a642" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDroneManager_1a3e47b15e8b85d8215257d354ff86a642" kindref="member">DroneManager::start</ref>()<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classDroneManager_1a5cbb4e5c33a7ce1fde6d7f2ca2929444" kindref="member">running_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDroneManager_1a5cbb4e5c33a7ce1fde6d7f2ca2929444" kindref="member">running_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDroneManager_1ab67a4727e82d69ffad8ce13d788eccc6" kindref="member">spin_thread_</ref><sp/>=<sp/>std::thread([</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rclcpp::spin(<ref refid="classDroneManager_1abcebc371c40b085a8e8d57e5f5296779" kindref="member">node_</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classDroneManager_1a6eeadbaa8e3869abaf87bfae5e6d6ea3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDroneManager_1a6eeadbaa8e3869abaf87bfae5e6d6ea3" kindref="member">DroneManager::stop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDroneManager_1a5cbb4e5c33a7ce1fde6d7f2ca2929444" kindref="member">running_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDroneManager_1a5cbb4e5c33a7ce1fde6d7f2ca2929444" kindref="member">running_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDroneManager_1ab67a4727e82d69ffad8ce13d788eccc6" kindref="member">spin_thread_</ref>.joinable())<sp/><ref refid="classDroneManager_1ab67a4727e82d69ffad8ce13d788eccc6" kindref="member">spin_thread_</ref>.join();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classDroneManager_1accb1ab255272a243241f6cd0d3353455" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDroneManager_1accb1ab255272a243241f6cd0d3353455" kindref="member">DroneManager::arm</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>drone_name)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDroneManager_1a34eef5f6034244ff1b506b543a139bee" kindref="member">drones_</ref>.count(drone_name))<sp/><ref refid="classDroneManager_1a34eef5f6034244ff1b506b543a139bee" kindref="member">drones_</ref>[drone_name]-&gt;arm();</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="classDroneManager_1ab6e3206cc6616418ebf6e915f1a181ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDroneManager_1ab6e3206cc6616418ebf6e915f1a181ee" kindref="member">DroneManager::disarm</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>drone_name)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDroneManager_1a34eef5f6034244ff1b506b543a139bee" kindref="member">drones_</ref>.count(drone_name))<sp/><ref refid="classDroneManager_1a34eef5f6034244ff1b506b543a139bee" kindref="member">drones_</ref>[drone_name]-&gt;disarm();</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classDroneManager_1ad25d1adc2786fea23421d2e935ba7cad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDroneManager_1ad25d1adc2786fea23421d2e935ba7cad" kindref="member">DroneManager::takeoff</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>drone_name)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDroneManager_1a34eef5f6034244ff1b506b543a139bee" kindref="member">drones_</ref>.count(drone_name))<sp/><ref refid="classDroneManager_1a34eef5f6034244ff1b506b543a139bee" kindref="member">drones_</ref>[drone_name]-&gt;takeoff();</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classDroneManager_1a47014b5bc725812df414e92c0b4f2250" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDroneManager_1a47014b5bc725812df414e92c0b4f2250" kindref="member">DroneManager::set_position</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>drone_name,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>yaw)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDroneManager_1a34eef5f6034244ff1b506b543a139bee" kindref="member">drones_</ref>.count(drone_name))<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDroneManager_1a34eef5f6034244ff1b506b543a139bee" kindref="member">drones_</ref>[drone_name]-&gt;set_position(x,<sp/>y,<sp/>z,<sp/>yaw);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_WARN(<ref refid="classDroneManager_1abcebc371c40b085a8e8d57e5f5296779" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Tried<sp/>to<sp/>set<sp/>position<sp/>for<sp/>unknown<sp/>drone:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>drone_name.c_str());</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="classDroneManager_1a718d800dadcc2e1f3d17e22fab2374ed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDroneManager_1a718d800dadcc2e1f3d17e22fab2374ed" kindref="member">DroneManager::land</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>drone_name)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDroneManager_1a34eef5f6034244ff1b506b543a139bee" kindref="member">drones_</ref>.count(drone_name))<sp/><ref refid="classDroneManager_1a34eef5f6034244ff1b506b543a139bee" kindref="member">drones_</ref>[drone_name]-&gt;land();</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classDroneManager_1aaf19a6ece1c58d5d5c9723725815f89c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDroneManager_1aaf19a6ece1c58d5d5c9723725815f89c" kindref="member">DroneManager::is_connected</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>drone_name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classDroneManager_1a34eef5f6034244ff1b506b543a139bee" kindref="member">drones_</ref>.count(drone_name)<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="classDroneManager_1a57badc42f388d71facb1a4a3b25f8014" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDroneManager_1a57badc42f388d71facb1a4a3b25f8014" kindref="member">DroneManager::is_armed</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>drone_name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classDroneManager_1aaf19a6ece1c58d5d5c9723725815f89c" kindref="member">is_connected</ref>(drone_name);<sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Add<sp/>real<sp/>armed<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="classDroneManager_1ad791e962b4cf144c61b0d640e5b6e874" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDroneManager_1ad791e962b4cf144c61b0d640e5b6e874" kindref="member">DroneManager::set_loiter_mode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>drone_name)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDroneManager_1a34eef5f6034244ff1b506b543a139bee" kindref="member">drones_</ref>.count(drone_name))<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDroneManager_1a34eef5f6034244ff1b506b543a139bee" kindref="member">drones_</ref>[drone_name]-&gt;set_loiter_mode();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_WARN(<ref refid="classDroneManager_1abcebc371c40b085a8e8d57e5f5296779" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Tried<sp/>to<sp/>set<sp/>loiter<sp/>mode<sp/>for<sp/>unknown<sp/>drone:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>drone_name.c_str());</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="classDroneManager_1a4239f6f39448a46d98881ca805b679e8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDroneManager_1a4239f6f39448a46d98881ca805b679e8" kindref="member">DroneManager::set_position_mode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>drone_name)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDroneManager_1a34eef5f6034244ff1b506b543a139bee" kindref="member">drones_</ref>.count(drone_name))<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDroneManager_1a34eef5f6034244ff1b506b543a139bee" kindref="member">drones_</ref>[drone_name]-&gt;set_position_mode();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_WARN(<ref refid="classDroneManager_1abcebc371c40b085a8e8d57e5f5296779" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Tried<sp/>to<sp/>set<sp/>position<sp/>mode<sp/>for<sp/>unknown<sp/>drone:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>drone_name.c_str());</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/drone_core/src/drone_core/drone_manager.cpp"/>
  </compounddef>
</doxygen>
