<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classOffboardControl" kind="class" language="C++" prot="public">
    <compoundname>OffboardControl</compoundname>
    <includes refid="offboard__control_8hpp" local="no">offboard_control.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2d" prot="public" static="no" strong="yes">
        <type></type>
        <name>State</name>
        <enumvalue id="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2dae37f0136aa3ffaf149b351f6a4c948e9" prot="public">
          <name>init</name>
          <briefdescription>
<para>Initial state. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2da9995f5beaef7b06d427b018b03a5ee39" prot="public">
          <name>offboard_requested</name>
          <briefdescription>
<para>Offboard mode requested. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2da1659dee3f1149c4682f3286422fb57ba" prot="public">
          <name>wait_for_stable_offboard_mode</name>
          <briefdescription>
<para>Waiting for offboard mode to stabilize. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2da199c9e9f930e5e397734384245ee61ec" prot="public">
          <name>arm_requested</name>
          <briefdescription>
<para>Arm command sent. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2da6e0c631e86ef2402cfa1ca3608a5123e" prot="public">
          <name>armed</name>
          <briefdescription>
<para>Drone is armed and ready. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumeration of possible offboard control states. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/offboard_control.hpp" line="28" column="5" bodyfile="src/drone_core/include/drone_core/offboard_control.hpp" bodystart="28" bodyend="34"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" prot="private" static="no" mutable="no">
        <type>rclcpp::Node *</type>
        <definition>rclcpp::Node* OffboardControl::node_</definition>
        <argsstring></argsstring>
        <name>node_</name>
        <briefdescription>
<para>Pointer to ROS2 node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/offboard_control.hpp" line="87" column="18" bodyfile="src/drone_core/include/drone_core/offboard_control.hpp" bodystart="87" bodyend="-1"/>
        <referencedby refid="classOffboardControl_1a5e9633b6059c739f9993bf710cab83c2" compoundref="offboard__control_8cpp" startline="171" endline="207">command_response_callback</referencedby>
        <referencedby refid="classOffboardControl_1a19bcc486a8eb3cde63a5970e795663ef" compoundref="offboard__control_8cpp" startline="22" endline="39">OffboardControl</referencedby>
        <referencedby refid="classOffboardControl_1a8e7d2f533f95d905cbacab1beec0cca5" compoundref="offboard__control_8cpp" startline="219" endline="225">publish_trajectory_setpoint</referencedby>
        <referencedby refid="classOffboardControl_1ab95f56d0d8f9d1c73b139ffbfc8ba6bf" compoundref="offboard__control_8cpp" startline="142" endline="161">send_vehicle_command</referencedby>
        <referencedby refid="classOffboardControl_1ae4b80998df39efe0cab2ef6b09a6e200" compoundref="offboard__control_8cpp" startline="47" endline="59">start</referencedby>
        <referencedby refid="classOffboardControl_1ada6bd384622490ee569bcc40de89c217" compoundref="offboard__control_8cpp" startline="66" endline="72">stop</referencedby>
        <referencedby refid="classOffboardControl_1af8e70b949b4f8b24bc65499d283a3258" compoundref="offboard__control_8cpp" startline="82" endline="131">timer_callback</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classOffboardControl_1a1f13749a64647c48ca5b75af7a7244f0" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string OffboardControl::ns_</definition>
        <argsstring></argsstring>
        <name>ns_</name>
        <briefdescription>
<para>PX4 namespace. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/offboard_control.hpp" line="88" column="17" bodyfile="src/drone_core/include/drone_core/offboard_control.hpp" bodystart="88" bodyend="-1"/>
        <referencedby refid="classOffboardControl_1a19bcc486a8eb3cde63a5970e795663ef" compoundref="offboard__control_8cpp" startline="22" endline="39">OffboardControl</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classOffboardControl_1a1dab76f058afd3c8ede86123dfd77a3c" prot="private" static="no" mutable="no">
        <type>rclcpp::TimerBase::SharedPtr</type>
        <definition>rclcpp::TimerBase::SharedPtr OffboardControl::timer_</definition>
        <argsstring></argsstring>
        <name>timer_</name>
        <briefdescription>
<para>Timer for periodic publishing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/offboard_control.hpp" line="89" column="34" bodyfile="src/drone_core/include/drone_core/offboard_control.hpp" bodystart="89" bodyend="-1"/>
        <referencedby refid="classOffboardControl_1ae4b80998df39efe0cab2ef6b09a6e200" compoundref="offboard__control_8cpp" startline="47" endline="59">start</referencedby>
        <referencedby refid="classOffboardControl_1ada6bd384622490ee569bcc40de89c217" compoundref="offboard__control_8cpp" startline="66" endline="72">stop</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classOffboardControl_1a384d648577c897e6d860a84212dea06e" prot="private" static="no" mutable="no">
        <type>rclcpp::Publisher&lt; px4_msgs::msg::OffboardControlMode &gt;::SharedPtr</type>
        <definition>rclcpp::Publisher&lt;px4_msgs::msg::OffboardControlMode&gt;::SharedPtr OffboardControl::offboard_control_mode_pub_</definition>
        <argsstring></argsstring>
        <name>offboard_control_mode_pub_</name>
        <briefdescription>
<para>Publisher for offboard control mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/offboard_control.hpp" line="90" column="35" bodyfile="src/drone_core/include/drone_core/offboard_control.hpp" bodystart="90" bodyend="-1"/>
        <referencedby refid="classOffboardControl_1a19bcc486a8eb3cde63a5970e795663ef" compoundref="offboard__control_8cpp" startline="22" endline="39">OffboardControl</referencedby>
        <referencedby refid="classOffboardControl_1af8e70b949b4f8b24bc65499d283a3258" compoundref="offboard__control_8cpp" startline="82" endline="131">timer_callback</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classOffboardControl_1ab157d158b22145e10da19ac12045fef0" prot="private" static="no" mutable="no">
        <type>rclcpp::Publisher&lt; px4_msgs::msg::TrajectorySetpoint &gt;::SharedPtr</type>
        <definition>rclcpp::Publisher&lt;px4_msgs::msg::TrajectorySetpoint&gt;::SharedPtr OffboardControl::trajectory_setpoint_pub_</definition>
        <argsstring></argsstring>
        <name>trajectory_setpoint_pub_</name>
        <briefdescription>
<para>Publisher for trajectory setpoints. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/offboard_control.hpp" line="91" column="35" bodyfile="src/drone_core/include/drone_core/offboard_control.hpp" bodystart="91" bodyend="-1"/>
        <referencedby refid="classOffboardControl_1a19bcc486a8eb3cde63a5970e795663ef" compoundref="offboard__control_8cpp" startline="22" endline="39">OffboardControl</referencedby>
        <referencedby refid="classOffboardControl_1a8e7d2f533f95d905cbacab1beec0cca5" compoundref="offboard__control_8cpp" startline="219" endline="225">publish_trajectory_setpoint</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classOffboardControl_1a44b3c5ef77d57381de1f5658750ba284" prot="private" static="no" mutable="no">
        <type>rclcpp::Client&lt; px4_msgs::srv::VehicleCommand &gt;::SharedPtr</type>
        <definition>rclcpp::Client&lt;px4_msgs::srv::VehicleCommand&gt;::SharedPtr OffboardControl::vehicle_command_client_</definition>
        <argsstring></argsstring>
        <name>vehicle_command_client_</name>
        <briefdescription>
<para>Client for vehicle commands. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/offboard_control.hpp" line="92" column="32" bodyfile="src/drone_core/include/drone_core/offboard_control.hpp" bodystart="92" bodyend="-1"/>
        <referencedby refid="classOffboardControl_1a19bcc486a8eb3cde63a5970e795663ef" compoundref="offboard__control_8cpp" startline="22" endline="39">OffboardControl</referencedby>
        <referencedby refid="classOffboardControl_1ab95f56d0d8f9d1c73b139ffbfc8ba6bf" compoundref="offboard__control_8cpp" startline="142" endline="161">send_vehicle_command</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classOffboardControl_1aff0f3a025ec55301c2f94ea30677ed77" prot="private" static="no" mutable="no">
        <type><ref refid="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2d" kindref="member">State</ref></type>
        <definition>State OffboardControl::state_</definition>
        <argsstring></argsstring>
        <name>state_</name>
        <initializer>= <ref refid="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2dae37f0136aa3ffaf149b351f6a4c948e9" kindref="member">State::init</ref></initializer>
        <briefdescription>
<para>Current state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/offboard_control.hpp" line="94" column="11" bodyfile="src/drone_core/include/drone_core/offboard_control.hpp" bodystart="94" bodyend="-1"/>
        <referencedby refid="classOffboardControl_1ac1c81a5dee97021967854d96e1826025" compoundref="offboard__control_8hpp" startline="66" endline="66">get_state</referencedby>
        <referencedby refid="classOffboardControl_1ae4b80998df39efe0cab2ef6b09a6e200" compoundref="offboard__control_8cpp" startline="47" endline="59">start</referencedby>
        <referencedby refid="classOffboardControl_1af8e70b949b4f8b24bc65499d283a3258" compoundref="offboard__control_8cpp" startline="82" endline="131">timer_callback</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classOffboardControl_1ac8de4f5b3343b6830260693c1f451b7d" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t OffboardControl::service_result_</definition>
        <argsstring></argsstring>
        <name>service_result_</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Result of last service call. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/offboard_control.hpp" line="95" column="13" bodyfile="src/drone_core/include/drone_core/offboard_control.hpp" bodystart="95" bodyend="-1"/>
        <referencedby refid="classOffboardControl_1a5e9633b6059c739f9993bf710cab83c2" compoundref="offboard__control_8cpp" startline="171" endline="207">command_response_callback</referencedby>
        <referencedby refid="classOffboardControl_1af8e70b949b4f8b24bc65499d283a3258" compoundref="offboard__control_8cpp" startline="82" endline="131">timer_callback</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classOffboardControl_1a0a250d3a9fbe795d6a15cdda33492988" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool OffboardControl::service_done_</definition>
        <argsstring></argsstring>
        <name>service_done_</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Service call completion flag. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/offboard_control.hpp" line="96" column="10" bodyfile="src/drone_core/include/drone_core/offboard_control.hpp" bodystart="96" bodyend="-1"/>
        <referencedby refid="classOffboardControl_1a5e9633b6059c739f9993bf710cab83c2" compoundref="offboard__control_8cpp" startline="171" endline="207">command_response_callback</referencedby>
        <referencedby refid="classOffboardControl_1ab95f56d0d8f9d1c73b139ffbfc8ba6bf" compoundref="offboard__control_8cpp" startline="142" endline="161">send_vehicle_command</referencedby>
        <referencedby refid="classOffboardControl_1af8e70b949b4f8b24bc65499d283a3258" compoundref="offboard__control_8cpp" startline="82" endline="131">timer_callback</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classOffboardControl_1a91c4e5bcfe03a2e4e79b99664efba5d9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OffboardControl::offboard_setpoint_counter_</definition>
        <argsstring></argsstring>
        <name>offboard_setpoint_counter_</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Counter for offboard setpoints. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/offboard_control.hpp" line="97" column="9" bodyfile="src/drone_core/include/drone_core/offboard_control.hpp" bodystart="97" bodyend="-1"/>
        <referencedby refid="classOffboardControl_1af8e70b949b4f8b24bc65499d283a3258" compoundref="offboard__control_8cpp" startline="82" endline="131">timer_callback</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOffboardControl_1a19bcc486a8eb3cde63a5970e795663ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OffboardControl::OffboardControl</definition>
        <argsstring>(rclcpp::Node *node, const std::string &amp;px4_namespace)</argsstring>
        <name>OffboardControl</name>
        <param>
          <type>rclcpp::Node *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>px4_namespace</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classOffboardControl" kindref="compound">OffboardControl</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructs an <ref refid="classOffboardControl" kindref="compound">OffboardControl</ref> instance.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the ROS2 node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>px4_namespace</parametername>
</parameternamelist>
<parameterdescription>
<para>PX4 namespace for communication</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Initializes publishers and clients for PX4 communication. Sets up the offboard control mode publisher, trajectory setpoint publisher, and vehicle command client.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the ROS 2 node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>px4_namespace</parametername>
</parameternamelist>
<parameterdescription>
<para>Namespace for PX4 communication topics </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/offboard_control.hpp" line="41" column="5" bodyfile="src/drone_core/src/drone_core/offboard_control.cpp" bodystart="22" bodyend="39"/>
        <references refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" compoundref="offboard__control_8hpp" startline="87">node_</references>
        <references refid="classOffboardControl_1a1f13749a64647c48ca5b75af7a7244f0" compoundref="offboard__control_8hpp" startline="88">ns_</references>
        <references refid="classOffboardControl_1a384d648577c897e6d860a84212dea06e" compoundref="offboard__control_8hpp" startline="90">offboard_control_mode_pub_</references>
        <references refid="classOffboardControl_1ab157d158b22145e10da19ac12045fef0" compoundref="offboard__control_8hpp" startline="91">trajectory_setpoint_pub_</references>
        <references refid="classOffboardControl_1a44b3c5ef77d57381de1f5658750ba284" compoundref="offboard__control_8hpp" startline="92">vehicle_command_client_</references>
      </memberdef>
      <memberdef kind="function" id="classOffboardControl_1ae4b80998df39efe0cab2ef6b09a6e200" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OffboardControl::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <briefdescription>
<para>Start publishing offboard control mode messages and state machine. </para>
        </briefdescription>
        <detaileddescription>
<para>Starts the offboard control mode.</para>
<para>Initializes the timer for publishing offboard control mode messages at 2 Hz (required by PX4) and begins the state machine for transitioning to offboard mode. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/offboard_control.hpp" line="46" column="10" bodyfile="src/drone_core/src/drone_core/offboard_control.cpp" bodystart="47" bodyend="59"/>
        <references refid="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2dae37f0136aa3ffaf149b351f6a4c948e9">init</references>
        <references refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" compoundref="offboard__control_8hpp" startline="87">node_</references>
        <references refid="classOffboardControl_1aff0f3a025ec55301c2f94ea30677ed77" compoundref="offboard__control_8hpp" startline="94">state_</references>
        <references refid="classOffboardControl_1a1dab76f058afd3c8ede86123dfd77a3c" compoundref="offboard__control_8hpp" startline="89">timer_</references>
        <references refid="classOffboardControl_1af8e70b949b4f8b24bc65499d283a3258" compoundref="offboard__control_8cpp" startline="82" endline="131">timer_callback</references>
      </memberdef>
      <memberdef kind="function" id="classOffboardControl_1ada6bd384622490ee569bcc40de89c217" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OffboardControl::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
<para>Stop publishing offboard control mode messages. </para>
        </briefdescription>
        <detaileddescription>
<para>Stops the offboard control mode.</para>
<para>Cancels the timer and stops publishing offboard control mode messages. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/offboard_control.hpp" line="51" column="10" bodyfile="src/drone_core/src/drone_core/offboard_control.cpp" bodystart="66" bodyend="72"/>
        <references refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" compoundref="offboard__control_8hpp" startline="87">node_</references>
        <references refid="classOffboardControl_1a1dab76f058afd3c8ede86123dfd77a3c" compoundref="offboard__control_8hpp" startline="89">timer_</references>
      </memberdef>
      <memberdef kind="function" id="classOffboardControl_1a8e7d2f533f95d905cbacab1beec0cca5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OffboardControl::publish_trajectory_setpoint</definition>
        <argsstring>(float x, float y, float z, float yaw)</argsstring>
        <name>publish_trajectory_setpoint</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <param>
          <type>float</type>
          <declname>yaw</declname>
        </param>
        <briefdescription>
<para>Publish a trajectory setpoint. </para>
        </briefdescription>
        <detaileddescription>
<para>Publishes a trajectory setpoint to PX4.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Target x position in meters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Target y position in meters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>Target z position in meters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yaw</parametername>
</parameternamelist>
<parameterdescription>
<para>Target yaw angle in radians</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Sends a position and yaw setpoint to the PX4 flight controller.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>X position in meters (NED frame) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y position in meters (NED frame) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>Z position in meters (NED frame, positive down) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yaw</parametername>
</parameternamelist>
<parameterdescription>
<para>Yaw angle in radians </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/offboard_control.hpp" line="60" column="10" bodyfile="src/drone_core/src/drone_core/offboard_control.cpp" bodystart="219" bodyend="225"/>
        <references refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" compoundref="offboard__control_8hpp" startline="87">node_</references>
        <references refid="classOffboardControl_1ab157d158b22145e10da19ac12045fef0" compoundref="offboard__control_8hpp" startline="91">trajectory_setpoint_pub_</references>
      </memberdef>
      <memberdef kind="function" id="classOffboardControl_1ac1c81a5dee97021967854d96e1826025" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2d" kindref="member">State</ref></type>
        <definition>State OffboardControl::get_state</definition>
        <argsstring>() const</argsstring>
        <name>get_state</name>
        <briefdescription>
<para>Get the current state of the offboard control. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Current state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/offboard_control.hpp" line="66" column="11" bodyfile="src/drone_core/include/drone_core/offboard_control.hpp" bodystart="66" bodyend="66"/>
        <references refid="classOffboardControl_1aff0f3a025ec55301c2f94ea30677ed77" compoundref="offboard__control_8hpp" startline="94">state_</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classOffboardControl_1af8e70b949b4f8b24bc65499d283a3258" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OffboardControl::timer_callback</definition>
        <argsstring>()</argsstring>
        <name>timer_callback</name>
        <briefdescription>
<para>Timer callback for publishing offboard control mode and state machine. </para>
        </briefdescription>
        <detaileddescription>
<para>Timer callback for publishing offboard control mode messages.</para>
<para>This callback is executed at 2 Hz and handles:<orderedlist>
<listitem><para>Publishing the offboard control mode message</para>
</listitem><listitem><para>Managing the state machine for transitioning to offboard mode</para>
</listitem><listitem><para>Handling arming sequence </para>
</listitem></orderedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/offboard_control.hpp" line="72" column="10" bodyfile="src/drone_core/src/drone_core/offboard_control.cpp" bodystart="82" bodyend="131"/>
        <references refid="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2da199c9e9f930e5e397734384245ee61ec">arm_requested</references>
        <references refid="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2da6e0c631e86ef2402cfa1ca3608a5123e">armed</references>
        <references refid="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2dae37f0136aa3ffaf149b351f6a4c948e9">init</references>
        <references refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" compoundref="offboard__control_8hpp" startline="87">node_</references>
        <references refid="classOffboardControl_1a384d648577c897e6d860a84212dea06e" compoundref="offboard__control_8hpp" startline="90">offboard_control_mode_pub_</references>
        <references refid="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2da9995f5beaef7b06d427b018b03a5ee39">offboard_requested</references>
        <references refid="classOffboardControl_1a91c4e5bcfe03a2e4e79b99664efba5d9" compoundref="offboard__control_8hpp" startline="97">offboard_setpoint_counter_</references>
        <references refid="classOffboardControl_1ab95f56d0d8f9d1c73b139ffbfc8ba6bf" compoundref="offboard__control_8cpp" startline="142" endline="161">send_vehicle_command</references>
        <references refid="classOffboardControl_1a0a250d3a9fbe795d6a15cdda33492988" compoundref="offboard__control_8hpp" startline="96">service_done_</references>
        <references refid="classOffboardControl_1ac8de4f5b3343b6830260693c1f451b7d" compoundref="offboard__control_8hpp" startline="95">service_result_</references>
        <references refid="classOffboardControl_1aff0f3a025ec55301c2f94ea30677ed77" compoundref="offboard__control_8hpp" startline="94">state_</references>
        <references refid="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2da1659dee3f1149c4682f3286422fb57ba">wait_for_stable_offboard_mode</references>
        <referencedby refid="classOffboardControl_1ae4b80998df39efe0cab2ef6b09a6e200" compoundref="offboard__control_8cpp" startline="47" endline="59">start</referencedby>
      </memberdef>
      <memberdef kind="function" id="classOffboardControl_1ab95f56d0d8f9d1c73b139ffbfc8ba6bf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OffboardControl::send_vehicle_command</definition>
        <argsstring>(uint16_t command, float param1=0.0f, float param2=0.0f)</argsstring>
        <name>send_vehicle_command</name>
        <param>
          <type>uint16_t</type>
          <declname>command</declname>
        </param>
        <param>
          <type>float</type>
          <declname>param1</declname>
          <defval>0.0f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>param2</declname>
          <defval>0.0f</defval>
        </param>
        <briefdescription>
<para>Send a vehicle command to PX4. </para>
        </briefdescription>
        <detaileddescription>
<para>Sends a vehicle command to PX4.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>Command code </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param1</parametername>
</parameternamelist>
<parameterdescription>
<para>First parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second parameter</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Constructs and sends a vehicle command message to PX4 through the vehicle command service.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The command ID to send </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param1</parametername>
</parameternamelist>
<parameterdescription>
<para>First parameter for the command </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second parameter for the command </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/offboard_control.hpp" line="80" column="10" bodyfile="src/drone_core/src/drone_core/offboard_control.cpp" bodystart="142" bodyend="161"/>
        <references refid="classOffboardControl_1a5e9633b6059c739f9993bf710cab83c2" compoundref="offboard__control_8cpp" startline="171" endline="207">command_response_callback</references>
        <references refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" compoundref="offboard__control_8hpp" startline="87">node_</references>
        <references refid="classOffboardControl_1a0a250d3a9fbe795d6a15cdda33492988" compoundref="offboard__control_8hpp" startline="96">service_done_</references>
        <references refid="classOffboardControl_1a44b3c5ef77d57381de1f5658750ba284" compoundref="offboard__control_8hpp" startline="92">vehicle_command_client_</references>
        <referencedby refid="classOffboardControl_1af8e70b949b4f8b24bc65499d283a3258" compoundref="offboard__control_8cpp" startline="82" endline="131">timer_callback</referencedby>
      </memberdef>
      <memberdef kind="function" id="classOffboardControl_1a5e9633b6059c739f9993bf710cab83c2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OffboardControl::command_response_callback</definition>
        <argsstring>(rclcpp::Client&lt; px4_msgs::srv::VehicleCommand &gt;::SharedFuture future)</argsstring>
        <name>command_response_callback</name>
        <param>
          <type>rclcpp::Client&lt; px4_msgs::srv::VehicleCommand &gt;::SharedFuture</type>
          <declname>future</declname>
        </param>
        <briefdescription>
<para>Callback for vehicle command response. </para>
        </briefdescription>
        <detaileddescription>
<para>Callback for vehicle command service responses.</para>
<para>Handles the response from the vehicle command service, logging the result and updating the service status.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>future</parametername>
</parameternamelist>
<parameterdescription>
<para>Future object containing the service response </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/drone_core/include/drone_core/offboard_control.hpp" line="85" column="10" bodyfile="src/drone_core/src/drone_core/offboard_control.cpp" bodystart="171" bodyend="207"/>
        <references refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" compoundref="offboard__control_8hpp" startline="87">node_</references>
        <references refid="classOffboardControl_1a0a250d3a9fbe795d6a15cdda33492988" compoundref="offboard__control_8hpp" startline="96">service_done_</references>
        <references refid="classOffboardControl_1ac8de4f5b3343b6830260693c1f451b7d" compoundref="offboard__control_8hpp" startline="95">service_result_</references>
        <referencedby refid="classOffboardControl_1ab95f56d0d8f9d1c73b139ffbfc8ba6bf" compoundref="offboard__control_8cpp" startline="142" endline="161">send_vehicle_command</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Manages offboard control mode and trajectory setpoints. </para>
    </briefdescription>
    <detaileddescription>
<para>This class handles:<itemizedlist>
<listitem><para>Continuous publishing of offboard control mode messages</para>
</listitem><listitem><para>On-demand publishing of trajectory setpoints</para>
</listitem><listitem><para>State machine for offboard control sequence </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>OffboardControl</label>
        <link refid="classOffboardControl"/>
        <childnode refid="2" relation="usage">
          <edgelabel>ns_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="2">
        <label>std::string</label>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/drone_core/include/drone_core/offboard_control.hpp" line="23" column="1" bodyfile="src/drone_core/include/drone_core/offboard_control.hpp" bodystart="23" bodyend="98"/>
    <listofallmembers>
      <member refid="classOffboardControl_1a5e9633b6059c739f9993bf710cab83c2" prot="private" virt="non-virtual"><scope>OffboardControl</scope><name>command_response_callback</name></member>
      <member refid="classOffboardControl_1ac1c81a5dee97021967854d96e1826025" prot="public" virt="non-virtual"><scope>OffboardControl</scope><name>get_state</name></member>
      <member refid="classOffboardControl_1a83f8d52f2e141d8ca18f64f5ca5efec3" prot="private" virt="non-virtual"><scope>OffboardControl</scope><name>node_</name></member>
      <member refid="classOffboardControl_1a1f13749a64647c48ca5b75af7a7244f0" prot="private" virt="non-virtual"><scope>OffboardControl</scope><name>ns_</name></member>
      <member refid="classOffboardControl_1a384d648577c897e6d860a84212dea06e" prot="private" virt="non-virtual"><scope>OffboardControl</scope><name>offboard_control_mode_pub_</name></member>
      <member refid="classOffboardControl_1a91c4e5bcfe03a2e4e79b99664efba5d9" prot="private" virt="non-virtual"><scope>OffboardControl</scope><name>offboard_setpoint_counter_</name></member>
      <member refid="classOffboardControl_1a19bcc486a8eb3cde63a5970e795663ef" prot="public" virt="non-virtual"><scope>OffboardControl</scope><name>OffboardControl</name></member>
      <member refid="classOffboardControl_1a8e7d2f533f95d905cbacab1beec0cca5" prot="public" virt="non-virtual"><scope>OffboardControl</scope><name>publish_trajectory_setpoint</name></member>
      <member refid="classOffboardControl_1ab95f56d0d8f9d1c73b139ffbfc8ba6bf" prot="private" virt="non-virtual"><scope>OffboardControl</scope><name>send_vehicle_command</name></member>
      <member refid="classOffboardControl_1a0a250d3a9fbe795d6a15cdda33492988" prot="private" virt="non-virtual"><scope>OffboardControl</scope><name>service_done_</name></member>
      <member refid="classOffboardControl_1ac8de4f5b3343b6830260693c1f451b7d" prot="private" virt="non-virtual"><scope>OffboardControl</scope><name>service_result_</name></member>
      <member refid="classOffboardControl_1ae4b80998df39efe0cab2ef6b09a6e200" prot="public" virt="non-virtual"><scope>OffboardControl</scope><name>start</name></member>
      <member refid="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2d" prot="public" virt="non-virtual"><scope>OffboardControl</scope><name>State</name></member>
      <member refid="classOffboardControl_1aff0f3a025ec55301c2f94ea30677ed77" prot="private" virt="non-virtual"><scope>OffboardControl</scope><name>state_</name></member>
      <member refid="classOffboardControl_1ada6bd384622490ee569bcc40de89c217" prot="public" virt="non-virtual"><scope>OffboardControl</scope><name>stop</name></member>
      <member refid="classOffboardControl_1a1dab76f058afd3c8ede86123dfd77a3c" prot="private" virt="non-virtual"><scope>OffboardControl</scope><name>timer_</name></member>
      <member refid="classOffboardControl_1af8e70b949b4f8b24bc65499d283a3258" prot="private" virt="non-virtual"><scope>OffboardControl</scope><name>timer_callback</name></member>
      <member refid="classOffboardControl_1ab157d158b22145e10da19ac12045fef0" prot="private" virt="non-virtual"><scope>OffboardControl</scope><name>trajectory_setpoint_pub_</name></member>
      <member refid="classOffboardControl_1a44b3c5ef77d57381de1f5658750ba284" prot="private" virt="non-virtual"><scope>OffboardControl</scope><name>vehicle_command_client_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
