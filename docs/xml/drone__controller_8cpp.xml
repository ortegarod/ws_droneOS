<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="drone__controller_8cpp" kind="file" language="C++">
    <compoundname>drone_controller.cpp</compoundname>
    <includes refid="drone__controller_8hpp" local="yes">drone_core/drone_controller.hpp</includes>
    <includes local="no">px4_msgs/srv/vehicle_command.hpp</includes>
    <incdepgraph>
      <node id="5">
        <label>px4_msgs/srv/vehicle_command.hpp</label>
      </node>
      <node id="2">
        <label>drone_core/drone_controller.hpp</label>
        <link refid="drone__controller_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>rclcpp/rclcpp.hpp</label>
      </node>
      <node id="9">
        <label>px4_msgs/msg/trajectory_setpoint.hpp</label>
      </node>
      <node id="8">
        <label>px4_msgs/msg/offboard_control_mode.hpp</label>
      </node>
      <node id="7">
        <label>drone_core/offboard_control.hpp</label>
        <link refid="offboard__control_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>drone_core/drone_agent.hpp</label>
        <link refid="drone__agent_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/drone_core/src/drone_core/drone_controller.cpp</label>
        <link refid="drone__controller_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>px4_msgs/msg/vehicle_command.hpp</label>
      </node>
      <node id="10">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacepx4__msgs_1_1msg">px4_msgs::msg</innernamespace>
    <innernamespace refid="namespacestd_1_1chrono__literals">std::chrono_literals</innernamespace>
    <briefdescription>
<para>Implementation of the <ref refid="classDroneController" kindref="compound">DroneController</ref> class. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="drone__controller_8hpp" kindref="compound">drone_core/drone_controller.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;px4_msgs/srv/vehicle_command.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">px4_msgs::msg;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::chrono_literals;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classDroneController_1aa67092201d1fb31334379d7ef5a66235" refkind="member"><highlight class="normal"><ref refid="classDroneController_1aa67092201d1fb31334379d7ef5a66235" kindref="member">DroneController::DroneController</ref>(rclcpp::Node*<sp/>node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>px4_namespace)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>node_(node),<sp/>name_(name),<sp/>ns_(px4_namespace)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDroneController_1a07d746e6d02ae63c3117b3721fe070fa" kindref="member">drone_agent_</ref><sp/>=<sp/>std::make_unique&lt;DroneAgent&gt;(<ref refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" kindref="member">node_</ref>,<sp/><ref refid="classDroneController_1a0edfab2681011e10cda6f8cb28eaee1a" kindref="member">ns_</ref>,<sp/><ref refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" kindref="member">name_</ref>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDroneController_1a7d11e531cf01b680050f496425118481" kindref="member">offboard_control_</ref><sp/>=<sp/>std::make_unique&lt;OffboardControl&gt;(<ref refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" kindref="member">node_</ref>,<sp/><ref refid="classDroneController_1a0edfab2681011e10cda6f8cb28eaee1a" kindref="member">ns_</ref>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>initial<sp/>position<sp/>(hover<sp/>at<sp/>5<sp/>meters)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDroneController_1a4f0634d2e3ab89165b015c12e882dbad" kindref="member">target_x_</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDroneController_1a603c64f680b92a15a043cc4fabe720f3" kindref="member">target_y_</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDroneController_1a64733531bff81796dfdbeda4371cb061" kindref="member">target_z_</ref><sp/>=<sp/>-5.0f;<sp/><sp/></highlight><highlight class="comment">//<sp/>Negative<sp/>Z<sp/>is<sp/>up<sp/>in<sp/>NED<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDroneController_1a659b19b528332abb67e0fac27a318fe7" kindref="member">target_yaw_</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>RCLCPP_INFO(<ref refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;[%s]<sp/>Drone<sp/>connected<sp/>and<sp/>ready<sp/>for<sp/>commands&quot;</highlight><highlight class="normal">,<sp/><ref refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" kindref="member">name_</ref>.c_str());</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classDroneController_1a2bb6bb18bcd5e4c7377bf2c7221bb62f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDroneController_1a2bb6bb18bcd5e4c7377bf2c7221bb62f" kindref="member">DroneController::arm</ref>()<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDroneController_1a07d746e6d02ae63c3117b3721fe070fa" kindref="member">drone_agent_</ref>-&gt;sendVehicleCommand(VehicleCommand::VEHICLE_CMD_COMPONENT_ARM_DISARM,<sp/>1.0f,<sp/>0.0f,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](uint8_t<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(<ref refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;[%s]<sp/>Vehicle<sp/>is<sp/>armed&quot;</highlight><highlight class="normal">,<sp/><ref refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" kindref="member">name_</ref>.c_str());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_ERROR(<ref refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;[%s]<sp/>Failed<sp/>to<sp/>arm&quot;</highlight><highlight class="normal">,<sp/><ref refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" kindref="member">name_</ref>.c_str());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>RCLCPP_INFO(<ref refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;[%s]<sp/>Arm<sp/>command<sp/>sent&quot;</highlight><highlight class="normal">,<sp/><ref refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" kindref="member">name_</ref>.c_str());</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classDroneController_1ae52bb1d50cb5414d78af49962b8ea8b4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDroneController_1ae52bb1d50cb5414d78af49962b8ea8b4" kindref="member">DroneController::disarm</ref>()<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDroneController_1a07d746e6d02ae63c3117b3721fe070fa" kindref="member">drone_agent_</ref>-&gt;sendVehicleCommand(VehicleCommand::VEHICLE_CMD_COMPONENT_ARM_DISARM,<sp/>0.0f,<sp/>0.0f,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](uint8_t<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(<ref refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;[%s]<sp/>Vehicle<sp/>is<sp/>disarmed&quot;</highlight><highlight class="normal">,<sp/><ref refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" kindref="member">name_</ref>.c_str());</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_ERROR(<ref refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;[%s]<sp/>Failed<sp/>to<sp/>disarm&quot;</highlight><highlight class="normal">,<sp/><ref refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" kindref="member">name_</ref>.c_str());</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>RCLCPP_INFO(<ref refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;[%s]<sp/>Disarm<sp/>command<sp/>sent&quot;</highlight><highlight class="normal">,<sp/><ref refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" kindref="member">name_</ref>.c_str());</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classDroneController_1af5698222150a6bf5de479016f10acc63" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDroneController_1af5698222150a6bf5de479016f10acc63" kindref="member">DroneController::takeoff</ref>()<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDroneController_1a7d11e531cf01b680050f496425118481" kindref="member">offboard_control_</ref>-&gt;start();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDroneController_1a4b6f5aa78d968a1c680da4b64a3dafcb" kindref="member">set_position</ref>(<ref refid="classDroneController_1a4f0634d2e3ab89165b015c12e882dbad" kindref="member">target_x_</ref>,<sp/><ref refid="classDroneController_1a603c64f680b92a15a043cc4fabe720f3" kindref="member">target_y_</ref>,<sp/><ref refid="classDroneController_1a64733531bff81796dfdbeda4371cb061" kindref="member">target_z_</ref>,<sp/><ref refid="classDroneController_1a659b19b528332abb67e0fac27a318fe7" kindref="member">target_yaw_</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>RCLCPP_INFO(<ref refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;[%s]<sp/>Starting<sp/>takeoff<sp/>sequence&quot;</highlight><highlight class="normal">,<sp/><ref refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" kindref="member">name_</ref>.c_str());</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classDroneController_1a4b6f5aa78d968a1c680da4b64a3dafcb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDroneController_1a4b6f5aa78d968a1c680da4b64a3dafcb" kindref="member">DroneController::set_position</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>yaw)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDroneController_1a4f0634d2e3ab89165b015c12e882dbad" kindref="member">target_x_</ref><sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDroneController_1a603c64f680b92a15a043cc4fabe720f3" kindref="member">target_y_</ref><sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDroneController_1a64733531bff81796dfdbeda4371cb061" kindref="member">target_z_</ref><sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDroneController_1a659b19b528332abb67e0fac27a318fe7" kindref="member">target_yaw_</ref><sp/>=<sp/>yaw;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDroneController_1a7d11e531cf01b680050f496425118481" kindref="member">offboard_control_</ref>-&gt;publish_trajectory_setpoint(x,<sp/>y,<sp/>z,<sp/>yaw);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classDroneController_1a2da898f4a3cf5b82eafe82e33576791c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDroneController_1a2da898f4a3cf5b82eafe82e33576791c" kindref="member">DroneController::land</ref>()<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDroneController_1a07d746e6d02ae63c3117b3721fe070fa" kindref="member">drone_agent_</ref>-&gt;sendVehicleCommand(VehicleCommand::VEHICLE_CMD_NAV_LAND,<sp/>0.0f,<sp/>0.0f,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](uint8_t<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(<ref refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;[%s]<sp/>Landing<sp/>sequence<sp/>initiated&quot;</highlight><highlight class="normal">,<sp/><ref refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" kindref="member">name_</ref>.c_str());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_ERROR(<ref refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;[%s]<sp/>Failed<sp/>to<sp/>initiate<sp/>landing&quot;</highlight><highlight class="normal">,<sp/><ref refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" kindref="member">name_</ref>.c_str());</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>RCLCPP_INFO(<ref refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;[%s]<sp/>Land<sp/>command<sp/>sent&quot;</highlight><highlight class="normal">,<sp/><ref refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" kindref="member">name_</ref>.c_str());</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="classDroneController_1a4fb59b233337b1e3a16acce4343365d2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDroneController_1a4fb59b233337b1e3a16acce4343365d2" kindref="member">DroneController::set_loiter_mode</ref>()<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDroneController_1a07d746e6d02ae63c3117b3721fe070fa" kindref="member">drone_agent_</ref>-&gt;sendVehicleCommand(VehicleCommand::VEHICLE_CMD_DO_SET_MODE,<sp/>1.0f,<sp/>4.0f,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](uint8_t<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(<ref refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;[%s]<sp/>Set<sp/>to<sp/>loiter<sp/>mode&quot;</highlight><highlight class="normal">,<sp/><ref refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" kindref="member">name_</ref>.c_str());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_ERROR(<ref refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;[%s]<sp/>Failed<sp/>to<sp/>set<sp/>loiter<sp/>mode&quot;</highlight><highlight class="normal">,<sp/><ref refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" kindref="member">name_</ref>.c_str());</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>RCLCPP_INFO(<ref refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;[%s]<sp/>Set<sp/>mode<sp/>to<sp/>LOITER&quot;</highlight><highlight class="normal">,<sp/><ref refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" kindref="member">name_</ref>.c_str());</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classDroneController_1a95ea01a8c146f1402af327fd97c993c5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDroneController_1a95ea01a8c146f1402af327fd97c993c5" kindref="member">DroneController::set_position_mode</ref>()<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDroneController_1a07d746e6d02ae63c3117b3721fe070fa" kindref="member">drone_agent_</ref>-&gt;sendVehicleCommand(VehicleCommand::VEHICLE_CMD_DO_SET_MODE,<sp/>1.0f,<sp/>2.0f,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](uint8_t<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(<ref refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;[%s]<sp/>Set<sp/>to<sp/>position<sp/>control<sp/>mode&quot;</highlight><highlight class="normal">,<sp/><ref refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" kindref="member">name_</ref>.c_str());</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_ERROR(<ref refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;[%s]<sp/>Failed<sp/>to<sp/>set<sp/>position<sp/>control<sp/>mode&quot;</highlight><highlight class="normal">,<sp/><ref refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" kindref="member">name_</ref>.c_str());</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>RCLCPP_INFO(<ref refid="classDroneController_1af288d7ec51c90b73f55e301b25d83133" kindref="member">node_</ref>-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;[%s]<sp/>Set<sp/>mode<sp/>to<sp/>POSITION&quot;</highlight><highlight class="normal">,<sp/><ref refid="classDroneController_1aaf16794ef6f05a31a83cfbda3a7457ee" kindref="member">name_</ref>.c_str());</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classDroneController_1afde4f7f2ca28f12f12a420ba3756ce34" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDroneController_1afde4f7f2ca28f12f12a420ba3756ce34" kindref="member">DroneController::is_ready</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classDroneController_1a7d11e531cf01b680050f496425118481" kindref="member">offboard_control_</ref>-&gt;get_state()<sp/>==<sp/><ref refid="classOffboardControl_1aae9000ef98e5f4d9a76e2394c4f21f2da6e0c631e86ef2402cfa1ca3608a5123e" kindref="member">OffboardControl::State::armed</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/drone_core/src/drone_core/drone_controller.cpp"/>
  </compounddef>
</doxygen>
